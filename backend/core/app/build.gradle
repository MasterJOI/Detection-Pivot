plugins {
	id 'org.springframework.boot' version '2.3.5.RELEASE'
	id "org.flywaydb.flyway" version "7.2.1"
	id "io.freefair.lombok" version "5.3.0"
}

dependencies {
	def mapstruct = "1.3.1.Final"
	def jjwt = "0.10.5"
	def apache_commons_lang = "3.11"

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core'
	implementation "io.jsonwebtoken:jjwt-api:${jjwt}"
	implementation "io.jsonwebtoken:jjwt-impl:${jjwt}"
	implementation "io.jsonwebtoken:jjwt-jackson:${jjwt}"
	implementation "org.mapstruct:mapstruct:${mapstruct}"
	implementation "org.apache.commons:commons-lang3:${apache_commons_lang}"
	implementation "com.google.guava:guava:30.0-jre"

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'com.h2database:h2'

	compile project(':db')
}

test {
	useJUnitPlatform()
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/mindbridge'
	user = 'postgres'
	password = 'admin'
}
